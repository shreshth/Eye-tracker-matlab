function plotEyeMatches(noTestImg,imgTest,imgTrain,bestMatch,...
                         showPlot,adjPlot,savePlot)
                     
% *************************************************************************
% SUMMARY   : Function to display the test images used and the
%             corresponding eyes, which match in the training database
%
% USAGE     : plotEyeMatches(noTestImg,imgTest,imgTrain,bestMatch,showPlot
%             ,adjPlot,savePlot)
%             invoke only in DEBUG mode
%
% ARGUMENTS :
% 
% noTestImg - Number of test images used
% imgTest   - Set of test images - this should be a structure
% imgTrain  - Database of training images
% bestMatch - Structure containing the best matches for each test image
% showPlot  - Display the plots generated by this function
% adjPlot   - Plot the test and the matched images side by side
% savePlot  - Save the plots generated by this function
%
% *************************************************************************

if showPlot
    % ---------------------------------------------------------------------
    % DEBUG: Show the test images and the corresponding training matches
    % ---------------------------------------------------------------------
    
    if adjPlot                               % If adjacent plots are chosen
        
        figure;
        colormap(gray);
        set(gcf, 'Name', 'Test image and the matched eye');
        
        for iIt = 1:noTestImg
            subplot(1,2,1);imagesc(imgTest(iIt).img);
            subplot(1,2,2);imagesc(imgTrain(bestMatch(iIt)).img);pause(0.5)
            drawnow;
        end  
    else
        % -----------------------------------------------------------------
        % DEBUG: Show the test images used
        % -----------------------------------------------------------------

        fTestImg = figure;
        colormap(gray);
        set(gcf, 'Name', 'Test images used');
        noCols = ceil(sqrt(noTestImg));

        for iIt = 1:noTestImg
            closeImgPlot(noCols,iIt,imgTest(iIt).img);
            drawnow;
        end       

        % ------------------------------------------------- Reposition plot

        set(gcf,'paperUnits','centimeters')
        xSize = 16; ySize = 14;
        xLeft = (21-xSize)/2; yTop = (30-ySize)/2;

        set(gcf,'PaperPosition',[xLeft yTop xSize ySize]);
        set(gcf,'Position',[0 0 xSize*50 ySize*50]);

        if savePlot
            set(gcf,'PaperPositionMode','auto');
            saveas(fTestImg,strcat('results/fig/testImg.fig'));
            saveas(fTestImg, 'results/eps/testImg', 'epsc'); 
            saveas(fTestImg,strcat('results/png/testImg.png'));
            saveas(fTestImg,strcat('results/pdf/testImg.pdf'));
        end        
        
        % -----------------------------------------------------------------
        % DEBUG: Show the corresponding best matches found in the training 
        % database.
        % -----------------------------------------------------------------

        fMatchImg = figure;
        colormap(gray);
        set(gcf, 'Name', 'Best matches in the training database');
        noCols = ceil(sqrt(noTestImg)); 

        for iIt = 1:noTestImg
            closeImgPlot(noCols,iIt,imgTrain(bestMatch(iIt)).img);
            drawnow;
        end
        
        % ------------------------------------------------- Reposition plot

        set(gcf,'paperUnits','centimeters')
        xSize = 16; ySize = 14;
        xLeft = (21-xSize)/2; yTop = (30-ySize)/2;

        set(gcf,'PaperPosition',[xLeft yTop xSize ySize]);
        set(gcf,'Position',[800 0 xSize*50 ySize*50]);

        if savePlot
            set(gcf,'PaperPositionMode','auto');
            saveas(fMatchImg,strcat('results/fig/matchImg.fig'));
            saveas(fMatchImg, 'results/eps/matchImg', 'epsc'); 
            saveas(fMatchImg,strcat('results/png/matchImg.png'));
            saveas(fMatchImg,strcat('results/pdf/matchImg.pdf'));
        end
    end
end